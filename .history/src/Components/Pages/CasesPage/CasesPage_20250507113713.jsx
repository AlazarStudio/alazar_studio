import React, { useEffect, useState } from 'react';
import classes from './CasesPage.module.css';
import serverConfig from '../../../serverConfig';
import CaseHomeCard from '../../ui/HomePage/CaseHomeCard';
import { useNavigate, useParams, useLocation } from 'react-router-dom';

export default function CasesPage() {
  const [caseHomes, setCaseHomes] = useState([]);
  const [categories, setCategories] = useState([]); // üÜï –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [isCategoryMenuOpen, setIsCategoryMenuOpen] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const [selectedCategory, setSelectedCategory] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const [searchQuery, setSearchQuery] = useState(''); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞

  const navigate = useNavigate();
  const { categoryTitle } = useParams(); // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ URL
  const location = useLocation();

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–µ–π—Å—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [casesHomeRes, categoriesRes] = await Promise.all([
          fetch(`${serverConfig}/casesHome`),
          fetch(`${serverConfig}/categories`),
        ]);

        const casesHomeData = await casesHomeRes.json();
        const categoriesData = await categoriesRes.json();

        setCaseHomes(casesHomeData);
        setCategories(categoriesData);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞
  const handleSearchChange = (e) => {
    const query = e.target.value;
    setSearchQuery(query);
    // –û–±–Ω–æ–≤–ª—è–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–æ–∏—Å–∫–∞
    navigate(`?search=${query}${categoryTitle ? `&category=${categoryTitle}` : ''}`);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const handleCategorySelect = (categoryId, categoryTitle) => {
    setSelectedCategory(categoryId);
    // –û–±–Ω–æ–≤–ª—è–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    navigate(`/cases/${categoryTitle}?search=${searchQuery}`);
  };

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–µ–π—Å—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∑–∞–ø—Ä–æ—Å—É –ø–æ–∏—Å–∫–∞
  const filteredCaseHomes = caseHomes.filter((caseHome) => {
    const matchesCategory = selectedCategory
      ? caseHome.categories.some((category) => category.id === selectedCategory)
      : true;

    const matchesSearchQuery = caseHome.name.toLowerCase().includes(searchQuery.toLowerCase());

    return matchesCategory && matchesSearchQuery;
  });

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const search = params.get('search') || '';
    const category = params.get('category');
    
    setSearchQuery(search);

    if (category) {
      setSelectedCategory(category);
    }

  }, [location.search]);

  return (
    <div className={classes.container}>
      <div className={classes.containerCase}>
        <div className={classes.containerCaseTop}>
          <div className={classes.containerCaseTopName}>
            <span>–ù–ê–®–ò</span>
            <span>–ö–ï–ô–°–´</span>
          </div>

          {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
          <input
            type="text"
            placeholder="–ü–û–ò–°–ö"
            value={searchQuery}
            onChange={handleSearchChange}
          />

          <button onClick={() => setIsCategoryMenuOpen((prev) => !prev)}>–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï</button>{' '}
          {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–Ω—é */}
        </div>

        {/* üîΩ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className={classes.categoryMenu}>
          {categories.map((cat) => (
            <span
              key={cat.id}
              className={classes.categoryItem}
              onClick={() => handleCategorySelect(cat.id, cat.title)} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            >
              {cat.title}
            </span>
          ))}
        </div>

        {/* üîΩ –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ */}
        <div
          className={`${classes.categoryMenuMobil} ${
            isCategoryMenuOpen ? classes.open : ''
          }`}
        >
          {categories.map((cat) => (
            <span
              key={cat.id}
              className={classes.categoryItemMobil}
              onClick={() => handleCategorySelect(cat.id, cat.title)} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            >
              {cat.title}
            </span>
          ))}
        </div>
      </div>

      {/* üîΩ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–µ–π—Å—ã */}
      <CaseHomeCard caseHomes={filteredCaseHomes} />
    </div>
  );
}
